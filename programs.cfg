(function(i)
  local o = {}
  for k, v in pairs(i) do
    o[k] = {
      files = {},
      dependencies = {},
      name = k,
      description = v.description,
      note = v.note or "Further description is coming soon(tm)...",
      hidden = v.hidden,
      authors = "mpmxyz",
      repo = "tree/master",
    }
    for _, d in ipairs(v.dependencies or {}) do
      o[k].dependencies[d] = "/"
    end
    for _, f in ipairs(v.files or {}) do
      local target = ("//" .. f:match("^:?(.-)$")):gsub("^//home", "")
      local source = f:match("^:?") .. "master/" .. f:match("^:?(.-)$")
      o[k].files[source] = f:match("^:") and target or target:gsub("[^/]+$", ""):gsub("([^/])/$", "%1")
    end
  end
  return o
end){
  ["crunch"] = {
    files = {"home/bin/crunch.lua", ":home/lib/crunch", ":home/lib/parser", "usr/man/crunch.man"},
    dependencies = {"mpm.cache", "mpm.lib", "mpm.hashset", "mpm.sets", "mpm.setset"},
    description = "compresses Lua code (e.g. BIOS)",
    note = "http://oc.cil.li/index.php?/topic/558-",
    hidden = false,
  },
  ["devfs"] = {
    files = {"boot/98_devfs.lua", ":lib/devfs", ":lib/drivers"},
    description = "adds a virtual device filesystem mounted in /dev",
    hidden = false,
  },
  ["mpmpid"] = {
    files = {"home/bin/pid.lua", "home/bin/gpid.lua", "home/lib/pid.lua", "usr/man/pid.man", ":home/pid/examples"},
    dependencies = {"mpm.values", "mpm.libarmor", "mpm.qui"},
    description = "PID controllers for minecraft",
    note = "http://oc.cil.li/index.php?/topic/558-",
    hidden = false,
  },
  ["mpm.tar"] = {
    files = {"home/bin/tar.lua", "usr/man/tar.man"},
    dependencies = {"mpm.auto_progress"},
    description = "can extract AND create tar archives - even on tape drives",
    hidden = false,
  },
  ["purgelib"] = {
    files = {"home/bin/purgelib.lua", "usr/man/purgelib.man"},
    description = "force reloading libraries to make testing easier",
    hidden = false,
  },
  ["mpm.cache"] = {
    files = {"home/lib/mpm/cache.lua"},
    description = "allows creating cache wrappers",
    hidden = true,
  },
  ["mpm.hashset"] = {
    files = {"home/lib/mpm/hashset.lua"},
    description = "improves on Lua tables by allowing custom equality - needs custom hash function",
    hidden = true,
  },
  ["mpm.lib"] = {
    files = {"home/lib/mpm/lib.lua"},
    description = "allows iteration of all files for a given library path",
    hidden = true,
  },
  ["mpm.libarmor"] = {
    files = {"home/lib/mpm/libarmor.lua"},
    description = "protects tables against modification",
    hidden = true,
  },
  ["mpm.qui"] = {
    files = {"home/lib/mpm/qui.lua", "home/lib/mpm/quidgets.lua", "home/lib/mpm/qselect.lua", "home/lib/mpm/qevent.lua"},
    dependencies = {"mpm.values", "mpm.stack", "mpm.textgfx"},
    description = "quickUI - create a fully functional user interface from a string and only little extras",
    hidden = true,
  },
  ["mpm.sets"] = {
    files = {"home/lib/mpm/sets.lua"},
    description = "helper functions to work with table sets",
    hidden = true,
  },
  ["mpm.setset"] = {
    files = {"home/lib/mpm/setset.lua"},
    description = "a set of sets that helps to ensure a raw equality between sets with same contents",
    hidden = true,
  },
  ["mpm.stack"] = {
    files = {"home/lib/mpm/stack.lua"},
    description = "a stack implementation for Lua",
    hidden = true,
  },
  ["mpm.textgfx"] = {
    files = {"home/lib/mpm/textgfx.lua"},
    description = "This is a small collection of functions oriented around drawing text based graphics.",
    hidden = true,
  },
  ["mpm.values"] = {
    files = {"home/lib/mpm/values.lua"},
    description = "This library makes it easy to use raw values and value getters interchangably.",
    hidden = true,
  },
  ["mpm.auto_progress"] = {
    files = {"home/lib/mpm/auto_progress.lua"},
    description = "an automatic progress bar for command line applications",
    hidden = true,
  },
}
